# This file is part of Aeronautical Wireshark Plugin.
#
# Copyright (C) 2023 Airbus CyberSecurity SAS
#
# Aeronautical Wireshark Plugin is free software: you can redistribute it
# and/or modify it under the terms of the GNU General Public License as
# published by the Free Software Foundation, either version 3 of the License,
# or (at your option) any later version.
#
# Aeronautical Wireshark Plugin is distributed in the hope that it will be
# useful, but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU General
# Public License for more details.
#
# You should have received a copy of the GNU General Public License along with
# Aeronautical Wireshark Plugin. If not, see <https://www.gnu.org/licenses/>.

name: CI

on:
  push:

jobs:

  # LuaBitOp DLL Compilation
  luabitop_windows_build:
    runs-on: windows-latest
    env:
      # Variables to update in case of new versions
      LUABITOP_VERSION: "1.0.2"
      WIRESHARK_VERSION: "4.2.3"
      LUA_VERSION: "5.2.4"

    steps:
      # Get all sources
      - name: Get LuaBitOp
        run: Invoke-WebRequest -Uri http://bitop.luajit.org/download/LuaBitOp-${env:LUABITOP_VERSION}.zip -OutFile dll.zip
      - name: Get Wireshark
        run: Invoke-WebRequest -Uri  https://2.na.dl.wireshark.org/win64/Wireshark-${env:WIRESHARK_VERSION}-x64.exe -OutFile wireshark.exe
      - name: Get Lua
        run: Invoke-WebRequest -Uri  https://www.lua.org/ftp/lua-${env:LUA_VERSION}.tar.gz -OutFile lua.tar.gz

      # Store Wireshark as artifact for future usage
      - name: Archive wireshark.exe as artifact
        uses: actions/upload-artifact@v4
        with:
          name: Wireshark
          path: wireshark.exe
          if-no-files-found: error

      # Extract / rename folders and delete downloads
      - name: Unzip DLL source code
        run: tar -xf dll.zip
      - name: Normalize DLL source code folder
        run: mv LuaBitOp* dll
      - name: Delete DLL source code archive
        run: rm dll.zip
      - name: Unzip Lua source code
        run: tar -xf lua.tar.gz
      - name: Normalize Lua source code folder
        run: mv lua-* lua
      - name: Delete Lua source code archive
        run: rm lua.tar.gz
      - name: Extract lua52.dll from wireshark.exe
        run: 7z e wireshark.exe lua52.dll
      - name: Rename Lua DLL with the right name for the build
        run: mv lua52.dll lua51.dll
      - name: Delete Wireshark executable
        run: rm wireshark.exe

      # Copy everything in build directory (dll) and compile
      - name: Copy Lua Source code to build directory
        run: cp lua\src\* dll
      - name: Compile
        run: cd dll && mingw32-make -f Makefile.mingw
      - name: Move DLL to working directory
        run: mv dll/bit.dll bit.dll

      # Store LuaBitOp DLL as artifact for future usage
      - name: Archive DLL as artifact
        uses: actions/upload-artifact@v4
        with:
          name: LuaBitOp-DLL
          path: bit.dll
          if-no-files-found: error

  package_linux_plugin:
    runs-on: ubuntu-latest
    steps:
      - name: Get Plugin
        uses: actions/checkout@v4
        with:
          sparse-checkout: .
      - name: Create directory structure
        run: mkdir -p lib/x86_64-linux-gnu/wireshark/plugins share/wireshark
      - name: Move plugin files
        run: mv cyber_*.lua LICENSE README.md COPYING lib/x86_64-linux-gnu/wireshark/plugins
      - name: Move user_dlts file
        run: mv user_dlts share/wireshark
      - name: Package plugin
        run: zip -r Wireshark_plugin.zip share lib

      # Store Wireshark plugin as artifact for future usage
      - name: Archive DLL as artifact
        uses: actions/upload-artifact@v4
        with:
          name: Wireshark-plugin-linux
          path: Wireshark_plugin.zip
          if-no-files-found: error

  package_windows_plugin:
    runs-on: windows-latest
    needs: luabitop_windows_build
    steps:
      - name: Get Plugin
        uses: actions/checkout@v4
        with:
          sparse-checkout: .
      - name: Download LuaBitOp DLL
        uses: actions/download-artifact@v4
        with:
          name: LuaBitOp-DLL
      - name: Create directory structure
        run: mkdir -p Wireshark/plugins
      - name: Move plugin files
        run: mv cyber_*.lua,LICENSE,README.md,COPYING Wireshark/plugins
      - name: Move LuaBitOp DLL and user_dlts
        run: mv bit.dll,user_dlts Wireshark
      - name: Package plugin
        run: Compress-Archive -Path Wireshark -DestinationPath Wireshark_plugin.zip

      # Store Wireshark plugin as artifact for future usage
      - name: Archive DLL as artifact
        uses: actions/upload-artifact@v4
        with:
          name: Wireshark-plugin-windows
          path: Wireshark_plugin.zip
          if-no-files-found: error

  test_a429_ubuntu:
    runs-on: ubuntu-latest
    needs: package_linux_plugin
    steps:
      - name: Get test files
        uses: actions/checkout@v4
        with:
          sparse-checkout: |
            test
            pcapng_files
          sparse-checkout-cone-mode: false
      - name: Download plugin
        uses: actions/download-artifact@v4
        with:
          name: Wireshark-plugin-linux
      - name: Install luabitop
        run: sudo apt-get install lua-bitop
      - name: Install TShark
        run: sudo apt-get install tshark
      - name: Test TShark availability
        run: tshark --version
      - name: Extract Wireshark plugin
        run: sudo unzip Wireshark_plugin.zip -d /usr
      - name: Run TShark on ARINC429 traffic
        run: tshark -e A429.LABEL -e A429.WORD -e A429.SDI -e A429.SSM -e A429.DATA -e A429.PARITY -E header=y -T fields -r pcapng_files/arinc429_broadcast.pcapng | tee a429_broadcast.output
      - name: Run diff
        run: diff a429_broadcast.output test/a429_broadcast.output

  test_discrete_ubuntu:
    runs-on: ubuntu-latest
    needs: package_linux_plugin
    steps:
      - name: Get test files
        uses: actions/checkout@v4
        with:
          sparse-checkout: |
            test
            pcapng_files
          sparse-checkout-cone-mode: false
      - name: Download plugin
        uses: actions/download-artifact@v4
        with:
          name: Wireshark-plugin-linux
      - name: Install TShark
        run: sudo apt-get install tshark
      - name: Test TShark availability
        run: tshark --version
      - name: Extract Wireshark plugin
        run: sudo unzip Wireshark_plugin.zip -d /usr
      - name: Run TShark on discrete traffic
        run: tshark -e DISCRETE.VALUE -E header=y -T fields -r pcapng_files/discrete.pcapng | tee discrete.output
      - name: Run diff
        run: diff discrete.output test/discrete.output

  test_a429_windows:
    runs-on: windows-latest
    needs: package_windows_plugin
    steps:
      - name: Get test files
        uses: actions/checkout@v4
        with:
          sparse-checkout: |
            test
            pcapng_files
          sparse-checkout-cone-mode: false
      - name: Download Wireshark plugin
        uses: actions/download-artifact@v4
        with:
          name: Wireshark-plugin-windows
      - name: Download Wireshark
        uses: actions/download-artifact@v4
        with:
          name: Wireshark
      - name: Install Wireshark
        run: |
          .\wireshark.exe /S
          Start-Sleep -Seconds 30
      - name: Test TShark availability
        run: '& "${env:PROGRAMFILES}\Wireshark\tshark.exe" --version'
      - name: Install plugin
        run: Expand-Archive Wireshark_plugin.zip ${ENV:PROGRAMFILES} -Force
      - name: Run TShark on ARINC429 traffic
        run: '& "${env:PROGRAMFILES}\Wireshark\tshark.exe" -e A429.LABEL -e A429.WORD -e A429.SDI -e A429.SSM -e A429.DATA -e A429.PARITY -E header=y -T fields -r pcapng_files/arinc429_broadcast.pcapng | tee a429_broadcast.output'
      - name: Run diff
        run: fc.exe a429_broadcast.output test/a429_broadcast.output

  test_discrete_windows:
    runs-on: windows-latest
    needs: package_windows_plugin
    steps:
      - name: Get test files
        uses: actions/checkout@v4
        with:
          sparse-checkout: |
            test
            pcapng_files
          sparse-checkout-cone-mode: false
      - name: Download Wireshark plugin
        uses: actions/download-artifact@v4
        with:
          name: Wireshark-plugin-windows
      - name: Download Wireshark
        uses: actions/download-artifact@v4
        with:
          name: Wireshark
      - name: Install Wireshark
        run: |
          .\wireshark.exe /S
          Start-Sleep -Seconds 30
      - name: Test TShark availability
        run: '& "${env:PROGRAMFILES}\Wireshark\tshark.exe" --version'
      - name: Install plugin
        run: Expand-Archive Wireshark_plugin.zip ${ENV:PROGRAMFILES} -Force
      - name: Run TShark on discrete traffic
        run: '& "${env:PROGRAMFILES}\Wireshark\tshark.exe" -e DISCRETE.VALUE -E header=y -T fields -r pcapng_files/discrete.pcapng | tee discrete.output'
      - name: Run diff
        run: fc.exe discrete.output test/discrete.output

  release_linux_plugin:
    runs-on: ubuntu-latest
    needs: [test_a429_ubuntu, test_discrete_ubuntu]
    permissions:
      contents: write
    if: ${{ startsWith(github.ref, 'refs/tags/') }}
    steps:
      - name: Download plugin
        uses: actions/download-artifact@v4
        with:
          name: Wireshark-plugin-linux
      - name: Rename archive
        run: mv Wireshark_plugin.zip Wireshark_plugin-linux-${{ github.ref_name }}.zip
      - name: Release Linux plugin
        uses: softprops/action-gh-release@v1
        with:
          files: Wireshark_plugin-linux-${{ github.ref_name }}.zip
          fail_on_unmatched_files: true


  release_windows_plugin:
    runs-on: ubuntu-latest
    needs: [test_a429_windows, test_discrete_windows]
    permissions:
      contents: write
    if: ${{ startsWith(github.ref, 'refs/tags/') }}
    steps:
      - name: Download plugin
        uses: actions/download-artifact@v4
        with:
          name: Wireshark-plugin-windows
      - name: Rename archive
        run: mv Wireshark_plugin.zip Wireshark_plugin-windows-${{ github.ref_name }}.zip
      - name: Release Windows plugin
        uses: softprops/action-gh-release@v1
        with:
          files: Wireshark_plugin-windows-${{ github.ref_name }}.zip
          fail_on_unmatched_files: true
